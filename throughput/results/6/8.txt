BEGIN;
BEGIN
EXPLAIN (ANALYZE, BUFFERS)
select
	o_year,
	sum(case
		when nation = 'RUSSIA' then volume
		else 0
	end) / sum(volume) as mkt_share
from
	(
		select
			extract(year from o_orderdate) as o_year,
			l_extendedprice * (1 - l_discount) as volume,
			n2.n_name as nation
		from
			part,
			supplier,
			lineitem,
			orders,
			customer,
			nation n1,
			nation n2,
			region
		where
			p_partkey = l_partkey
			and s_suppkey = l_suppkey
			and l_orderkey = o_orderkey
			and o_custkey = c_custkey
			and c_nationkey = n1.n_nationkey
			and n1.n_regionkey = r_regionkey
			and r_name = 'EUROPE'
			and s_nationkey = n2.n_nationkey
			and o_orderdate between date '1995-01-01' and date '1996-12-31'
			and p_type = 'PROMO ANODIZED NICKEL'
	) as all_nations
group by
	o_year
order by
	o_year;
                                                                                             QUERY PLAN                                                                                              
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=1727025.97..1727027.80 rows=733 width=38) (actual time=8407.248..8407.249 rows=2 loops=1)
   Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
   Sort Method: quicksort  Memory: 25kB
   Buffers: shared hit=1765756 read=240062 dirtied=137
   ->  HashAggregate  (cost=1726978.26..1726991.09 rows=733 width=38) (actual time=8407.194..8407.195 rows=2 loops=1)
         Group Key: date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)
         Buffers: shared hit=1765753 read=240062 dirtied=137
         ->  Hash Join  (cost=39449.45..1726489.54 rows=24436 width=38) (actual time=929.781..8369.156 rows=24359 loops=1)
               Hash Cond: (supplier.s_nationkey = n2.n_nationkey)
               Buffers: shared hit=1765753 read=240062 dirtied=137
               ->  Nested Loop  (cost=39447.89..1726029.80 rows=24436 width=16) (actual time=929.712..8337.478 rows=24359 loops=1)
                     Buffers: shared hit=1765749 read=240062 dirtied=137
                     ->  Hash Join  (cost=39447.60..1718145.21 rows=24436 width=16) (actual time=929.674..8162.957 rows=24359 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           Buffers: shared hit=1692515 read=240062 dirtied=137
                           ->  Nested Loop  (cost=416.91..1678412.00 rows=122178 width=20) (actual time=6.876..7161.880 rows=121292 loops=1)
                                 Buffers: shared hit=1582445 read=203956 dirtied=137
                                 ->  Nested Loop  (cost=416.48..1481824.03 rows=401493 width=16) (actual time=6.472..3669.983 rows=398959 loops=1)
                                       Buffers: shared hit=271418 read=195350 dirtied=88
                                       ->  Bitmap Heap Scan on part  (cost=411.76..28119.12 rows=13333 width=4) (actual time=6.393..129.188 rows=13278 loops=1)
                                             Recheck Cond: ((p_type)::text = 'PROMO ANODIZED NICKEL'::text)
                                             Heap Blocks: exact=11388
                                             Buffers: shared hit=3022 read=8449
                                             ->  Bitmap Index Scan on part_p_type_p_partkey_idx  (cost=0.00..408.43 rows=13333 width=0) (actual time=4.297..4.297 rows=13278 loops=1)
                                                   Index Cond: ((p_type)::text = 'PROMO ANODIZED NICKEL'::text)
                                                   Buffers: shared read=83
                                       ->  Bitmap Heap Scan on lineitem  (cost=4.72..108.72 rows=31 width=20) (actual time=0.035..0.256 rows=30 loops=13278)
                                             Recheck Cond: (l_partkey = part.p_partkey)
                                             Heap Blocks: exact=400198
                                             Buffers: shared hit=268396 read=186901 dirtied=88
                                             ->  Bitmap Index Scan on lineitem_l_partkey_l_quantity_l_shipmode_idx  (cost=0.00..4.71 rows=31 width=0) (actual time=0.023..0.023 rows=30 loops=13278)
                                                   Index Cond: (l_partkey = part.p_partkey)
                                                   Buffers: shared hit=39340 read=15759
                                 ->  Index Scan using orders_o_orderkey_o_orderdate_idx on orders  (cost=0.43..0.48 rows=1 width=12) (actual time=0.008..0.008 rows=0 loops=398959)
                                       Index Cond: ((o_orderkey = lineitem.l_orderkey) AND (o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                       Buffers: shared hit=1311027 read=8606 dirtied=49
                           ->  Hash  (cost=35280.69..35280.69 rows=300000 width=4) (actual time=919.422..919.422 rows=300963 loops=1)
                                 Buckets: 524288  Batches: 1  Memory Usage: 14677kB
                                 Buffers: shared hit=110070 read=36106
                                 ->  Nested Loop  (cost=906.18..35280.69 rows=300000 width=4) (actual time=18.115..822.524 rows=300963 loops=1)
                                       Buffers: shared hit=110070 read=36106
                                       ->  Hash Join  (cost=1.07..2.47 rows=5 width=4) (actual time=0.037..0.075 rows=5 loops=1)
                                             Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                             Buffers: shared hit=2
                                             ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.004..0.012 rows=25 loops=1)
                                                   Buffers: shared hit=1
                                             ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.018..0.018 rows=1 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   Buffers: shared hit=1
                                                   ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.012..0.012 rows=1 loops=1)
                                                         Filter: (r_name = 'EUROPE'::bpchar)
                                                         Rows Removed by Filter: 4
                                                         Buffers: shared hit=1
                                       ->  Bitmap Heap Scan on customer  (cost=905.11..6455.64 rows=60000 width=8) (actual time=16.776..153.933 rows=60193 loops=5)
                                             Recheck Cond: (c_nationkey = n1.n_nationkey)
                                             Heap Blocks: exact=145336
                                             Buffers: shared hit=110068 read=36106
                                             ->  Bitmap Index Scan on customer_c_nationkey_c_custkey_idx  (cost=0.00..890.11 rows=60000 width=0) (actual time=10.963..10.963 rows=60193 loops=5)
                                                   Index Cond: (c_nationkey = n1.n_nationkey)
                                                   Buffers: shared hit=6 read=832
                     ->  Index Scan using pk_supplier on supplier  (cost=0.29..0.31 rows=1 width=8) (actual time=0.006..0.006 rows=1 loops=24359)
                           Index Cond: (s_suppkey = lineitem.l_suppkey)
                           Buffers: shared hit=73234
               ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.026..0.026 rows=25 loops=1)
                     Buckets: 1024  Batches: 1  Memory Usage: 10kB
                     Buffers: shared hit=1
                     ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30) (actual time=0.005..0.007 rows=25 loops=1)
                           Buffers: shared hit=1
 Planning time: 6.512 ms
 Execution time: 8408.033 ms
(70 rows)

COMMIT;
COMMIT
